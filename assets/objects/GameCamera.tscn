[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/objects/GameCamera.gd" type="Script" id=1]
[ext_resource path="res://assets/objects/Meter.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/spriteframes/backgrounds/1.tres" type="SpriteFrames" id=3]
[ext_resource path="res://assets/sprites/dispCRAZY.png" type="Texture" id=4]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D displace : hint_albedo;
uniform float dispAmt : hint_range(0, 0.1);
uniform float abberationAmtX : hint_range(0, 0.1);
uniform float abberationAmtY : hint_range(0, 0.1);
uniform float dispSize : hint_range(0, 2);

void fragment ()
{
	// Displace
	vec4 disp = texture(displace, SCREEN_UV * dispSize);
	vec2 newUV = SCREEN_UV + disp.xy * dispAmt;
	// Chromatic Abberation
	
	COLOR.r = texture(SCREEN_TEXTURE, newUV - vec2(abberationAmtX, abberationAmtY)).r;
	COLOR.g = texture(SCREEN_TEXTURE, newUV).g;
	COLOR.b = texture(SCREEN_TEXTURE, newUV + vec2(abberationAmtX, abberationAmtY)).b;
	COLOR.a = texture(SCREEN_TEXTURE, newUV).a;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 3 )
shader_param/dispAmt = 0.0
shader_param/abberationAmtX = 0.003
shader_param/abberationAmtY = 0.002
shader_param/dispSize = 0.0
shader_param/displace = ExtResource( 4 )

[node name="GameCamera" type="Node2D"]
script = ExtResource( 1 )

[node name="Background" type="Node2D" parent="."]
z_index = -4096

[node name="bg1" type="AnimatedSprite" parent="Background"]
position = Vector2( -10, -11 )
scale = Vector2( 1.79204, 1.67204 )
frames = ExtResource( 3 )
animation = "1"
frame = 1
speed_scale = 0.5
playing = true

[node name="bg2" type="AnimatedSprite" parent="Background"]
position = Vector2( -1445, -1318 )
scale = Vector2( 1.79204, 1.67204 )
frames = ExtResource( 3 )
animation = "1"
frame = 3
speed_scale = 0.5
playing = true
offset = Vector2( -51.8961, 781.68 )
flip_h = true

[node name="bg3" type="AnimatedSprite" parent="Background"]
position = Vector2( 1426, -1318 )
scale = Vector2( 1.79204, 1.67204 )
frames = ExtResource( 3 )
animation = "4"
speed_scale = 0.5
playing = true
offset = Vector2( 51.896, 781.68 )
flip_h = true

[node name="CelesteParticles" type="CPUParticles2D" parent="."]
position = Vector2( 664, -97 )
amount = 30
lifetime = 3.0
preprocess = 3.0
emission_shape = 2
emission_rect_extents = Vector2( 1, 400 )
direction = Vector2( -1, 0.5 )
gravity = Vector2( 0, -60 )
initial_velocity = 550.46
scale_amount = 7.0
color = Color( 1, 1, 1, 0.552941 )

[node name="Shake" type="Node2D" parent="."]

[node name="Camera2D" type="Camera2D" parent="Shake"]
position = Vector2( -20, 36 )
offset = Vector2( 0, -75 )
current = true

[node name="Meter" parent="." instance=ExtResource( 2 )]
margin_left = -679.0
margin_top = -437.0
margin_right = -679.0
margin_bottom = -437.0

[node name="GlitchFX" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_left = -720.0
margin_top = -488.0
margin_right = 637.0
margin_bottom = 385.0

[node name="DispSizeTimer" type="Timer" parent="GlitchFX"]
wait_time = 0.05
autostart = true

[node name="Blinking" type="Node2D" parent="."]
visible = false

[node name="BlinkBlackScreen" type="ColorRect" parent="Blinking"]
margin_left = -682.0
margin_top = -458.0
margin_right = 650.0
margin_bottom = 375.0
color = Color( 0, 0, 0, 1 )

[node name="BlackBlinkTimer" type="Timer" parent="Blinking/BlinkBlackScreen"]
wait_time = 0.05
autostart = true

[node name="BlackScreen" type="ColorRect" parent="."]
margin_left = -998.0
margin_top = -710.0
margin_right = 936.0
margin_bottom = 621.0
color = Color( 0, 0, 0, 0 )

[node name="StartTimer" type="Timer" parent="."]
wait_time = 0.4
one_shot = true
autostart = true

[node name="DeathTimer" type="Timer" parent="."]
wait_time = 0.1

[connection signal="timeout" from="GlitchFX/DispSizeTimer" to="." method="_on_DispSizeTimer_timeout"]
[connection signal="timeout" from="Blinking/BlinkBlackScreen/BlackBlinkTimer" to="." method="_on_BlackBlinkTimer_timeout"]
[connection signal="timeout" from="StartTimer" to="." method="_on_StartTimer_timeout"]
[connection signal="timeout" from="DeathTimer" to="." method="_on_DeathTimer_timeout"]
